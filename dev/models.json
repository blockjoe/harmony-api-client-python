{
  "title": "Harmony API Models",
  "definitions": {
    "AddressBlockNumberParameters": {
      "title": "AddressBlockNumberParameters",
      "type": "object",
      "properties": {
        "address": {
          "title": "Address",
          "description": "Delegator wallet address",
          "type": "string"
        },
        "block-number": {
          "title": "Block-Number",
          "description": "Block number",
          "type": "integer"
        }
      },
      "required": [
        "address",
        "block-number"
      ]
    },
    "AddressListResponse": {
      "title": "AddressListResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "List of addresses",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "AddressParameters": {
      "title": "AddressParameters",
      "type": "object",
      "properties": {
        "address": {
          "title": "Address",
          "description": "Address",
          "type": "string"
        }
      },
      "required": [
        "address"
      ]
    },
    "BLSKeyListResponse": {
      "title": "BLSKeyListResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "List of public BLS keys in the elected committee",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "BalanceResponse": {
      "title": "BalanceResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "Wallet balance at given block in Atto",
          "type": "integer"
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "BaseRequest": {
      "title": "BaseRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "description": "The method to call out to.",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "description": "The parameters for the method call.",
          "type": "array",
          "items": {}
        }
      },
      "required": [
        "method",
        "params"
      ]
    },
    "BaseResponse": {
      "title": "BaseResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "The result of the RPC call."
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "Block": {
      "title": "Block",
      "type": "object",
      "properties": {
        "difficulty": {
          "title": "Difficulty",
          "description": "Unused, legacy from Eth",
          "type": "integer"
        },
        "epoch": {
          "title": "Epoch",
          "description": "Epoch number of block",
          "type": "integer"
        },
        "extraData": {
          "title": "Extradata",
          "description": "Hex representation of extra data in the block",
          "type": "string"
        },
        "gasLimit": {
          "title": "Gaslimit",
          "description": "Maximum gas that can be used for transactions in the block",
          "type": "integer"
        },
        "gasUsed": {
          "title": "Gasused",
          "description": "Amount of gas used for transactions in the block",
          "type": "integer"
        },
        "hash": {
          "title": "Hash",
          "description": "Block hash",
          "type": "string"
        },
        "logsBloom": {
          "title": "Logsbloom",
          "description": "Bloom logs",
          "type": "string"
        },
        "miner": {
          "title": "Miner",
          "description": "Wallet address of the leader that proposed this block",
          "type": "string"
        },
        "mixHash": {
          "title": "Mixhash",
          "description": "Unused, legacy from Eth",
          "type": "string"
        },
        "nonce": {
          "title": "Nonce",
          "description": "Unused, legacy from Eth",
          "type": "integer"
        },
        "number": {
          "title": "Number",
          "description": "Block number",
          "type": "integer"
        },
        "parentHash": {
          "title": "Parenthash",
          "description": "Hash of parent block",
          "type": "string"
        },
        "receiptsRoot": {
          "title": "Receiptsroot",
          "description": "Hash of transaction receipt root",
          "type": "string"
        },
        "size": {
          "title": "Size",
          "description": "Block size in bytes",
          "type": "integer"
        },
        "stakingTransactions": {
          "title": "Stakingtransactions",
          "description": "List of staking transactions finalized in this block",
          "type": "object"
        },
        "stateRoot": {
          "title": "Stateroot",
          "description": "Hash of state root",
          "type": "string"
        },
        "timestamp": {
          "title": "Timestamp",
          "description": "Unix timestamp of the block",
          "type": "integer"
        },
        "transactions": {
          "title": "Transactions",
          "description": "List of transactions finalized in this block",
          "type": "object"
        },
        "transactionsRoot": {
          "title": "Transactionsroot",
          "description": "Hash of transactios root",
          "type": "string"
        },
        "uncles": {
          "title": "Uncles",
          "description": "Unused, legacy from Eth",
          "type": "object"
        },
        "viewID": {
          "title": "Viewid",
          "description": "View ID",
          "type": "integer"
        }
      },
      "required": [
        "difficulty",
        "epoch",
        "extraData",
        "gasLimit",
        "gasUsed",
        "hash",
        "logsBloom",
        "miner",
        "mixHash",
        "nonce",
        "number",
        "parentHash",
        "receiptsRoot",
        "size",
        "stakingTransactions",
        "stateRoot",
        "timestamp",
        "transactions",
        "transactionsRoot",
        "uncles",
        "viewID"
      ]
    },
    "BlockListResponse": {
      "title": "BlockListResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "List of blocks",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Block"
          }
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "BlockNumberAndIndexParameters": {
      "title": "BlockNumberAndIndexParameters",
      "type": "object",
      "properties": {
        "block-number": {
          "title": "Block-Number",
          "description": "Block number",
          "type": "integer"
        },
        "index": {
          "title": "Index",
          "description": "index value",
          "type": "integer"
        }
      },
      "required": [
        "block-number",
        "index"
      ]
    },
    "BlockNumberParameters": {
      "title": "BlockNumberParameters",
      "type": "object",
      "properties": {
        "block-number": {
          "title": "Block-Number",
          "description": "Block number",
          "type": "integer"
        }
      },
      "required": [
        "block-number"
      ]
    },
    "BlockNumberRequest": {
      "title": "BlockNumberRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_blockNumber",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "description": "An empty list with no parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BlockNumberResponse": {
      "title": "BlockNumberResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "Current block number",
          "type": "integer"
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "BlockResponse": {
      "title": "BlockResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "Block Object",
          "allOf": [
            {
              "$ref": "#/definitions/Block"
            }
          ]
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "SmartContractCall": {
      "title": "SmartContractCall",
      "type": "object",
      "properties": {
        "to": {
          "title": "To",
          "description": "Smart contract address",
          "type": "string"
        },
        "from": {
          "title": "From",
          "description": "Wallet address",
          "type": "string"
        },
        "gas": {
          "title": "Gas",
          "description": "Gas to execute the smart contract call",
          "type": "integer"
        },
        "gasPrice": {
          "title": "Gasprice",
          "description": "Gas price to execute smart contract call",
          "type": "integer"
        },
        "value": {
          "title": "Value",
          "description": "Value sent with the smart contract call",
          "type": "integer"
        },
        "data": {
          "title": "Data",
          "description": "Hash of smart contract method and parameters",
          "type": "string"
        }
      },
      "required": [
        "to"
      ]
    },
    "CallParameters": {
      "title": "CallParameters",
      "type": "object",
      "properties": {
        "smart_contract_call": {
          "$ref": "#/definitions/SmartContractCall"
        },
        "block-number": {
          "title": "Block-Number",
          "description": "Block number",
          "type": "integer"
        }
      },
      "required": [
        "smart_contract_call",
        "block-number"
      ]
    },
    "CallRequest": {
      "title": "CallRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_call",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": [
            {
              "$ref": "#/definitions/SmartContractCall"
            },
            {
              "type": "integer"
            }
          ]
        }
      },
      "required": [
        "params"
      ]
    },
    "CallResponse": {
      "title": "CallResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "Return value of the executed smart contract",
          "type": "string"
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "Delegation": {
      "title": "Delegation",
      "type": "object",
      "properties": {
        "validator-address": {
          "title": "Validator-Address",
          "description": "Validator wallet address",
          "type": "string"
        },
        "delegator-address": {
          "title": "Delegator-Address",
          "description": "Delegator wallet address",
          "type": "string"
        },
        "amount": {
          "title": "Amount",
          "description": "Amount delegated in atto",
          "type": "integer"
        },
        "reward": {
          "title": "Reward",
          "description": "Unclaimed rewards in atto",
          "type": "integer"
        },
        "undelegations": {
          "title": "Undelegations",
          "description": "List of pending undelegations",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": [
        "validator-address",
        "delegator-address",
        "amount",
        "reward",
        "undelegations"
      ]
    },
    "DelegationListResponse": {
      "title": "DelegationListResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "List of Delegation Objects",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Delegation"
          }
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "EmptyRequest": {
      "title": "EmptyRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "description": "The method to call out to.",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "description": "An empty list with no parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "method"
      ]
    },
    "EphochNumberParameters": {
      "title": "EphochNumberParameters",
      "type": "object",
      "properties": {
        "epoch-number": {
          "title": "Epoch-Number",
          "description": "Epoch number",
          "type": "integer"
        }
      },
      "required": [
        "epoch-number"
      ]
    },
    "EstimateGasRequest": {
      "title": "EstimateGasRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_estimateGas",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": [
            {
              "$ref": "#/definitions/SmartContractCall"
            },
            {
              "type": "integer"
            }
          ]
        }
      },
      "required": [
        "params"
      ]
    },
    "EstimateGasResponse": {
      "title": "EstimateGasResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "Hex of estimated gas price of smart contract call",
          "type": "string"
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "GasPriceRequest": {
      "title": "GasPriceRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_gasPrice",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "description": "An empty list with no parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GasPriceResponse": {
      "title": "GasPriceResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "Current average gas price of transactions",
          "type": "integer"
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "GetAllValidatorAddressesRequest": {
      "title": "GetAllValidatorAddressesRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getAllValidatorAddresses",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "description": "An empty list with no parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetAllValidatorInformationByBlockNumberParameters": {
      "title": "GetAllValidatorInformationByBlockNumberParameters",
      "type": "object",
      "properties": {
        "page-number": {
          "title": "Page-Number",
          "description": "Page number, -1 for all",
          "type": "integer"
        },
        "block-number": {
          "title": "Block-Number",
          "description": "Block number",
          "type": "integer"
        }
      },
      "required": [
        "page-number",
        "block-number"
      ]
    },
    "GetAllValidatorInformationByBlockNumberRequest": {
      "title": "GetAllValidatorInformationByBlockNumberRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getAllValidatorInformationByBlockNumber",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": [
            {
              "type": "integer"
            },
            {
              "type": "integer"
            }
          ]
        }
      },
      "required": [
        "params"
      ]
    },
    "GetAllValidatorInformationParameters": {
      "title": "GetAllValidatorInformationParameters",
      "type": "object",
      "properties": {
        "page-request": {
          "title": "Page-Request",
          "description": "Page to request (page size is 100), -1 for all validators",
          "type": "integer"
        }
      },
      "required": [
        "page-request"
      ]
    },
    "GetAllValidatorInformationRequest": {
      "title": "GetAllValidatorInformationRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getAllValidatorInformation",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      },
      "required": [
        "params"
      ]
    },
    "GetBalanceByBlockNumberRequest": {
      "title": "GetBalanceByBlockNumberRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getBalanceByBlockNumber",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ]
        }
      },
      "required": [
        "params"
      ]
    },
    "GetBalanceRequest": {
      "title": "GetBalanceRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getBalance",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "params"
      ]
    },
    "BlockConfig": {
      "title": "BlockConfig",
      "type": "object",
      "properties": {
        "fullTx": {
          "title": "Fulltx",
          "description": "Include full transaction data",
          "type": "boolean"
        },
        "inclTx": {
          "title": "Incltx",
          "description": "Include regular transactions",
          "type": "boolean"
        },
        "inclStaking": {
          "title": "Inclstaking",
          "description": "Include full staking transactions",
          "type": "boolean"
        }
      },
      "required": [
        "fullTx",
        "inclTx",
        "inclStaking"
      ]
    },
    "GetBlockByHashParameters": {
      "title": "GetBlockByHashParameters",
      "type": "object",
      "properties": {
        "hash": {
          "title": "Hash",
          "description": "Block hash",
          "type": "string"
        },
        "block-config": {
          "title": "Block-Config",
          "description": "BlockConfig Object",
          "allOf": [
            {
              "$ref": "#/definitions/BlockConfig"
            }
          ]
        }
      },
      "required": [
        "hash",
        "block-config"
      ]
    },
    "GetBlockByHashRequest": {
      "title": "GetBlockByHashRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getBlockByHash",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/BlockConfig"
            }
          ]
        }
      },
      "required": [
        "params"
      ]
    },
    "GetBlockByNumberParameters": {
      "title": "GetBlockByNumberParameters",
      "type": "object",
      "properties": {
        "block-number": {
          "title": "Block-Number",
          "description": "Block number",
          "type": "integer"
        },
        "block-config": {
          "title": "Block-Config",
          "description": "BlockConfig Object",
          "allOf": [
            {
              "$ref": "#/definitions/BlockConfig"
            }
          ]
        }
      },
      "required": [
        "block-number",
        "block-config"
      ]
    },
    "GetBlockByNumberRequest": {
      "title": "GetBlockByNumberRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getBlockByNumber",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": [
            {
              "type": "integer"
            },
            {
              "$ref": "#/definitions/BlockConfig"
            }
          ]
        }
      },
      "required": [
        "params"
      ]
    },
    "GetBlockSignersKeysRequest": {
      "title": "GetBlockSignersKeysRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getBlockSignersKeys",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      },
      "required": [
        "params"
      ]
    },
    "GetBlockSignersKeysResponse": {
      "title": "GetBlockSignersKeysResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "List of block signer public BLS keys",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "BlocksListConfig": {
      "title": "BlocksListConfig",
      "type": "object",
      "properties": {
        "withSigners": {
          "title": "Withsigners",
          "description": "Include block signer wallet addresses",
          "type": "boolean"
        },
        "fullTx": {
          "title": "Fulltx",
          "description": "Include full transaction data",
          "type": "boolean"
        },
        "inclStaking": {
          "title": "Inclstaking",
          "description": "Include full staking transactions",
          "type": "boolean"
        }
      },
      "required": [
        "withSigners",
        "fullTx",
        "inclStaking"
      ]
    },
    "GetBlockSignersRequest": {
      "title": "GetBlockSignersRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getBlockSigners",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": [
            {
              "type": "integer"
            },
            {
              "type": "integer"
            },
            {
              "$ref": "#/definitions/BlocksListConfig"
            }
          ]
        }
      },
      "required": [
        "params"
      ]
    },
    "GetBlockTransactionCountByHashRequest": {
      "title": "GetBlockTransactionCountByHashRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getBlockTransactionCountByHash",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "params"
      ]
    },
    "GetBlockTransactionCountByNumberRequest": {
      "title": "GetBlockTransactionCountByNumberRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getBlockTransactionCountByNumber",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      },
      "required": [
        "params"
      ]
    },
    "GetBlocksRequest": {
      "title": "GetBlocksRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getBlocks",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": [
            {
              "type": "integer"
            },
            {
              "type": "integer"
            },
            {
              "$ref": "#/definitions/BlocksListConfig"
            }
          ]
        }
      },
      "required": [
        "params"
      ]
    },
    "GetCXReceiptByHashRequest": {
      "title": "GetCXReceiptByHashRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getCXReceiptByHash",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "params"
      ]
    },
    "CXReceipt": {
      "title": "CXReceipt",
      "type": "object",
      "properties": {
        "blockHash": {
          "title": "Blockhash",
          "description": "Block hash",
          "type": "string"
        },
        "blockNumber": {
          "title": "Blocknumber",
          "description": "Block number",
          "type": "integer"
        },
        "hash": {
          "title": "Hash",
          "description": "Transaction hash",
          "type": "string"
        },
        "from": {
          "title": "From",
          "description": "Sender wallet address",
          "type": "string"
        },
        "to": {
          "title": "To",
          "description": "Receiver wallet address",
          "type": "string"
        },
        "shardID": {
          "title": "Shardid",
          "description": "From shard",
          "type": "integer"
        },
        "toShardID": {
          "title": "Toshardid",
          "description": "To shard",
          "type": "integer"
        },
        "value": {
          "title": "Value",
          "description": "Ammount transferred in Atto",
          "type": "integer"
        }
      },
      "required": [
        "blockHash",
        "blockNumber",
        "hash",
        "from",
        "to",
        "shardID",
        "toShardID",
        "value"
      ]
    },
    "GetCXReceiptByHashResponse": {
      "title": "GetCXReceiptByHashResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "CXReceipt Object",
          "allOf": [
            {
              "$ref": "#/definitions/CXReceipt"
            }
          ]
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "GetCirculatingSupplyRequest": {
      "title": "GetCirculatingSupplyRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getCirculatingSupply",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "description": "An empty list with no parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetCirculatingSupplyResponse": {
      "title": "GetCirculatingSupplyResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "Circulation supply of tokens in ONE",
          "type": "integer"
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "GetCodeParameters": {
      "title": "GetCodeParameters",
      "type": "object",
      "properties": {
        "address": {
          "title": "Address",
          "description": "The address to get the code from",
          "type": "string"
        },
        "block": {
          "title": "Block",
          "description": "Block to query for information. Usually latest, which specifies the most recent block.",
          "type": "string"
        },
        "callback": {
          "title": "Callback",
          "description": "Optional callback, returns an error object as first parameter and the result as second.",
          "type": "string"
        }
      },
      "required": [
        "address",
        "block"
      ]
    },
    "GetCodeRequest": {
      "title": "GetCodeRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getCode",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "anyOf": [
            {
              "type": "array",
              "items": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ]
            },
            {
              "type": "array",
              "items": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ]
            }
          ]
        }
      },
      "required": [
        "params"
      ]
    },
    "GetCodeResponse": {
      "title": "GetCodeResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "The data at given address address",
          "type": "string"
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "GetCurrentBadBlocksRequest": {
      "title": "GetCurrentBadBlocksRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getCurrentBadBlocks",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "description": "An empty list with no parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetCurrentBadBlocksResponse": {
      "title": "GetCurrentBadBlocksResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "List of bad blocks in node memory. Note: know issue with RPC not returning correctly",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "GetCurrentStakingErrorSinkRequest": {
      "title": "GetCurrentStakingErrorSinkRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getCurrentStakingErrorSink",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "description": "An empty list with no parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StakingError": {
      "title": "StakingError",
      "type": "object",
      "properties": {
        "tx-hash-id": {
          "title": "Tx-Hash-Id",
          "description": "Staking transaction hash",
          "type": "string"
        },
        "directive-kind": {
          "title": "Directive-Kind",
          "description": "Type of staking transaction",
          "type": "string"
        },
        "time-at-rejection": {
          "title": "Time-At-Rejection",
          "description": "Unix time when the staking transaction was rejected from the pool",
          "type": "integer"
        },
        "error-message": {
          "title": "Error-Message",
          "description": "Reason for staking transaction rejection",
          "type": "string"
        }
      },
      "required": [
        "tx-hash-id",
        "directive-kind",
        "time-at-rejection",
        "error-message"
      ]
    },
    "GetCurrentStakingErrorSinkResponse": {
      "title": "GetCurrentStakingErrorSinkResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "List of StakingError objects",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StakingError"
          }
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "GetCurrentTransactionErrorSinkRequest": {
      "title": "GetCurrentTransactionErrorSinkRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getCurrentTransactionErrorSinkRequest",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "description": "An empty list with no parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TransactionError": {
      "title": "TransactionError",
      "type": "object",
      "properties": {
        "tx-hash-id": {
          "title": "Tx-Hash-Id",
          "description": "Transaction hash",
          "type": "string"
        },
        "time-at-rejection": {
          "title": "Time-At-Rejection",
          "description": "Unix time when the transaction was rejected from the pool",
          "type": "integer"
        },
        "error-message": {
          "title": "Error-Message",
          "description": "Reason for  transaction rejection",
          "type": "string"
        }
      },
      "required": [
        "tx-hash-id",
        "time-at-rejection",
        "error-message"
      ]
    },
    "GetCurrentTransactionErrorSinkResponse": {
      "title": "GetCurrentTransactionErrorSinkResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "Object",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionError"
          }
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "GetCurrentUtilityMetricsRequest": {
      "title": "GetCurrentUtilityMetricsRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getCurrentUtilityMetrics",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "description": "An empty list with no parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UtilityMetrics": {
      "title": "UtilityMetrics",
      "type": "object",
      "properties": {
        "AccumulatorSnapshot": {
          "title": "Accumulatorsnapshot",
          "description": "Total block reward given out in Atto",
          "type": "integer"
        },
        "CurrentStakedPercentage": {
          "title": "Currentstakedpercentage",
          "description": "Percent of circulationg supply staked",
          "type": "string"
        },
        "Deviation": {
          "title": "Deviation",
          "description": "Change in percent of circulating supply staked",
          "type": "string"
        },
        "Adjustment": {
          "title": "Adjustment",
          "description": "Change in circulationg supply staked",
          "type": "string"
        }
      },
      "required": [
        "AccumulatorSnapshot",
        "CurrentStakedPercentage",
        "Deviation",
        "Adjustment"
      ]
    },
    "GetCurrentUtilityMetricsResponse": {
      "title": "GetCurrentUtilityMetricsResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "UtilityMetrics Object",
          "allOf": [
            {
              "$ref": "#/definitions/UtilityMetrics"
            }
          ]
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "GetDelegationByDelegatorRequest": {
      "title": "GetDelegationByDelegatorRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getDelegationsByDelegator",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "params"
      ]
    },
    "GetDelegationsByDelegatorByBlockNumberRequest": {
      "title": "GetDelegationsByDelegatorByBlockNumberRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getDelegationsByDelegatorByBlockNumber",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ]
        }
      },
      "required": [
        "params"
      ]
    },
    "GetDelegationsByValidatorRequest": {
      "title": "GetDelegationsByValidatorRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getDelegationsByValidator",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "params"
      ]
    },
    "GetElectedValidatorAddressesRequest": {
      "title": "GetElectedValidatorAddressesRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getElectedValidatorAddresses",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "description": "An empty list with no parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetEpochRequest": {
      "title": "GetEpochRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getEpoch",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "description": "An empty list with no parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetEpochResponse": {
      "title": "GetEpochResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "Current block number",
          "type": "integer"
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "GetHeaderByNumberRequest": {
      "title": "GetHeaderByNumberRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getHeaderByNumber",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      },
      "required": [
        "params"
      ]
    },
    "GetLastCrossLinksRequest": {
      "title": "GetLastCrossLinksRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getLastCrossLinks",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "description": "An empty list with no parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CrossLink": {
      "title": "CrossLink",
      "type": "object",
      "properties": {
        "hash": {
          "title": "Hash",
          "description": "Parent block hash",
          "type": "string"
        },
        "block-number": {
          "title": "Block-Number",
          "description": "Block number",
          "type": "integer"
        },
        "view-id": {
          "title": "View-Id",
          "description": "View ID",
          "type": "integer"
        },
        "signature": {
          "title": "Signature",
          "description": "Hex representation of aggregated signature",
          "type": "string"
        },
        "signature-bitmap": {
          "title": "Signature-Bitmap",
          "description": "Hex representation of aggregated signature bitmap",
          "type": "string"
        },
        "shard-id": {
          "title": "Shard-Id",
          "description": "Shard ID",
          "type": "integer"
        },
        "epoch-number": {
          "title": "Epoch-Number",
          "description": "Block epoch",
          "type": "integer"
        }
      },
      "required": [
        "hash",
        "block-number",
        "view-id",
        "signature",
        "signature-bitmap",
        "shard-id",
        "epoch-number"
      ]
    },
    "GetLastCrossLinksResponse": {
      "title": "GetLastCrossLinksResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "List of CrossLink objects",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CrossLink"
          }
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "GetLatestChainHeadersRequest": {
      "title": "GetLatestChainHeadersRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getLatestChainHeaders",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "description": "An empty list with no parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ChainHeader": {
      "title": "ChainHeader",
      "type": "object",
      "properties": {
        "shard-id": {
          "title": "Shard-Id",
          "description": "Shard ID",
          "type": "integer"
        },
        "block-header-hash": {
          "title": "Block-Header-Hash",
          "description": "Block header hash",
          "type": "string"
        },
        "block-number": {
          "title": "Block-Number",
          "description": "Block number",
          "type": "integer"
        },
        "view-id": {
          "title": "View-Id",
          "description": "View ID",
          "type": "integer"
        },
        "epoch": {
          "title": "Epoch",
          "description": "Epoch number",
          "type": "integer"
        }
      },
      "required": [
        "shard-id",
        "block-header-hash",
        "block-number",
        "view-id",
        "epoch"
      ]
    },
    "LatestChainHeaders": {
      "title": "LatestChainHeaders",
      "type": "object",
      "properties": {
        "beacon-chain-header": {
          "title": "Beacon-Chain-Header",
          "description": "ChainHeader Object",
          "allOf": [
            {
              "$ref": "#/definitions/ChainHeader"
            }
          ]
        },
        "shard-chain-header": {
          "title": "Shard-Chain-Header",
          "description": "ChainHeader Object",
          "allOf": [
            {
              "$ref": "#/definitions/ChainHeader"
            }
          ]
        }
      },
      "required": [
        "beacon-chain-header",
        "shard-chain-header"
      ]
    },
    "GetLatestChainHeadersResponse": {
      "title": "GetLatestChainHeadersResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "LatestChainHeaders Object",
          "allOf": [
            {
              "$ref": "#/definitions/LatestChainHeaders"
            }
          ]
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "GetLeaderRequest": {
      "title": "GetLeaderRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getLeader",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "description": "An empty list with no parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetLeaderResponse": {
      "title": "GetLeaderResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "Wallet address of current leader",
          "type": "string"
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "GetMedianRawStakeSnapshotRequest": {
      "title": "GetMedianRawStakeSnapshotRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getMedianRawStakeSnapshot",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "description": "An empty list with no parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "EposSlotWinners": {
      "title": "EposSlotWinners",
      "type": "object",
      "properties": {
        "slot-owner": {
          "title": "Slot-Owner",
          "description": "Wallet address of BLS key",
          "type": "string"
        },
        "bls-public-key": {
          "title": "Bls-Public-Key",
          "description": "BLS public key",
          "type": "string"
        },
        "raw-stake": {
          "title": "Raw-Stake",
          "description": "Actual stake",
          "type": "string"
        },
        "eposed-stake": {
          "title": "Eposed-Stake",
          "description": "Effective stake",
          "type": "string"
        }
      },
      "required": [
        "slot-owner",
        "bls-public-key",
        "raw-stake",
        "eposed-stake"
      ]
    },
    "EposSlotCandidates": {
      "title": "EposSlotCandidates",
      "type": "object",
      "properties": {
        "stake": {
          "title": "Stake",
          "description": "Actual stake in Atto",
          "type": "integer"
        },
        "keys-at-auction": {
          "title": "Keys-At-Auction",
          "description": "List of BLS public keys",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "percentage-of-total-auction-stake": {
          "title": "Percentage-Of-Total-Auction-Stake",
          "description": "Percent of total network stake",
          "type": "string"
        },
        "stake-per-key": {
          "title": "Stake-Per-Key",
          "description": "Stake per BLS key in Atto",
          "type": "integer"
        },
        "validator": {
          "title": "Validator",
          "description": "Wallet address of validator",
          "type": "string"
        }
      },
      "required": [
        "stake",
        "keys-at-auction",
        "percentage-of-total-auction-stake",
        "stake-per-key",
        "validator"
      ]
    },
    "MedianRawStakeSnapshot": {
      "title": "MedianRawStakeSnapshot",
      "type": "object",
      "properties": {
        "epos-median-stake": {
          "title": "Epos-Median-Stake",
          "description": "Effective median stake",
          "type": "string"
        },
        "max-eternal-slots": {
          "title": "Max-Eternal-Slots",
          "description": "Number of available committee slots",
          "type": "integer"
        },
        "epos-slot-winners": {
          "title": "Epos-Slot-Winners",
          "description": "Details for each slot winner",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EposSlotWinners"
          }
        },
        "epos-slot-candidates": {
          "title": "Epos-Slot-Candidates",
          "description": "Details for each candidates",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EposSlotCandidates"
          }
        }
      },
      "required": [
        "epos-median-stake",
        "max-eternal-slots",
        "epos-slot-winners",
        "epos-slot-candidates"
      ]
    },
    "GetMedianRawStakeSnapshotResponse": {
      "title": "GetMedianRawStakeSnapshotResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "MedianRawStakeSnapshot Object",
          "allOf": [
            {
              "$ref": "#/definitions/MedianRawStakeSnapshot"
            }
          ]
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "GetNodeMetadataRequest": {
      "title": "GetNodeMetadataRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getNodeMetadata",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "description": "An empty list with no parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ChainConfig": {
      "title": "ChainConfig",
      "type": "object",
      "properties": {
        "chain-id": {
          "title": "Chain-Id",
          "description": "Chain ID for the network",
          "type": "integer"
        },
        "cross-tx-epoch": {
          "title": "Cross-Tx-Epoch",
          "description": "Epoch at which cross shard transactions were enabled",
          "type": "integer"
        },
        "cross-link-epoch": {
          "title": "Cross-Link-Epoch",
          "description": "Epoch at which cross links were enabled",
          "type": "integer"
        },
        "staking-epoch": {
          "title": "Staking-Epoch",
          "description": "Epoch at which staking was enabled",
          "type": "integer"
        },
        "prestaking-epoch": {
          "title": "Prestaking-Epoch",
          "description": "Epoch at which pre-staking began",
          "type": "integer"
        },
        "quick-unlock-epoch": {
          "title": "Quick-Unlock-Epoch",
          "description": "Epoch at which undelegations unlocked in one epoch",
          "type": "integer"
        },
        "eip155-epoch": {
          "title": "Eip155-Epoch",
          "description": "Epoch at which EIP155 was enabled",
          "type": "integer"
        },
        "s3-epoch": {
          "title": "S3-Epoch",
          "description": "Epoch at which Mainnet V0 was launched",
          "type": "integer"
        },
        "receipt-log-epoch": {
          "title": "Receipt-Log-Epoch",
          "description": "Epoch at which receipt logs were enabled",
          "type": "integer"
        }
      },
      "required": [
        "chain-id",
        "cross-tx-epoch",
        "cross-link-epoch",
        "staking-epoch",
        "prestaking-epoch",
        "quick-unlock-epoch",
        "eip155-epoch",
        "s3-epoch",
        "receipt-log-epoch"
      ]
    },
    "P2PConnectivity": {
      "title": "P2PConnectivity",
      "type": "object",
      "properties": {
        "total-known-peers": {
          "title": "Total-Known-Peers",
          "description": "Number of known peers",
          "type": "integer"
        },
        "connected": {
          "title": "Connected",
          "description": "Number of connected peers",
          "type": "integer"
        },
        "not-connected": {
          "title": "Not-Connected",
          "description": "Number of known peers not connected",
          "type": "integer"
        }
      },
      "required": [
        "total-known-peers",
        "connected",
        "not-connected"
      ]
    },
    "NodeMetadata": {
      "title": "NodeMetadata",
      "type": "object",
      "properties": {
        "blskey": {
          "title": "Blskey",
          "description": "List of BLS keys on the node",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "version": {
          "title": "Version",
          "description": "Harmony binary version",
          "type": "string"
        },
        "network": {
          "title": "Network",
          "description": "Network name that the node is on (Mainnet ir Testnet)",
          "type": "string"
        },
        "chain-config": {
          "title": "Chain-Config",
          "description": "ChainConfig Object",
          "allOf": [
            {
              "$ref": "#/definitions/ChainConfig"
            }
          ]
        },
        "is-leader": {
          "title": "Is-Leader",
          "description": "Whether the node is currently leader or not",
          "type": "boolean"
        },
        "shard-id": {
          "title": "Shard-Id",
          "description": "Shard that the node is on",
          "type": "integer"
        },
        "current-epoch": {
          "title": "Current-Epoch",
          "description": "Current epoch",
          "type": "integer"
        },
        "blocks-per-epoch": {
          "title": "Blocks-Per-Epoch",
          "description": "Number of blacks per epoch (only available on Shard 0)",
          "type": "integer"
        },
        "role": {
          "title": "Role",
          "description": "Node type (Validator or ExplorerNode)",
          "type": "string"
        },
        "dns-zone": {
          "title": "Dns-Zone",
          "description": "Name of DNS zone",
          "type": "string"
        },
        "is-archival": {
          "title": "Is-Archival",
          "description": "Whether the node is currently in state pruning mode or not",
          "type": "boolean"
        },
        "node-unix-start-time": {
          "title": "Node-Unix-Start-Time",
          "description": "Start time of node in Unix time",
          "type": "integer"
        },
        "p2p-connectivity": {
          "title": "P2P-Connectivity",
          "description": "P2PConnectivity Object",
          "allOf": [
            {
              "$ref": "#/definitions/P2PConnectivity"
            }
          ]
        }
      },
      "required": [
        "blskey",
        "version",
        "network",
        "chain-config",
        "is-leader",
        "shard-id",
        "current-epoch",
        "blocks-per-epoch",
        "role",
        "dns-zone",
        "is-archival",
        "node-unix-start-time",
        "p2p-connectivity"
      ]
    },
    "GetNodeMetadataResponse": {
      "title": "GetNodeMetadataResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "Node Metadata Object",
          "allOf": [
            {
              "$ref": "#/definitions/NodeMetadata"
            }
          ]
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "GetPendingCXReceiptsRequest": {
      "title": "GetPendingCXReceiptsRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getPendingCXReceipts",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "description": "An empty list with no parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Receipt": {
      "title": "Receipt",
      "type": "object",
      "properties": {
        "txHash": {
          "title": "Txhash",
          "description": "Transaction hash",
          "type": "string"
        },
        "from": {
          "title": "From",
          "description": "Sender wallet address",
          "type": "string"
        },
        "to": {
          "title": "To",
          "description": "Receiver wallet address",
          "type": "string"
        },
        "shardID": {
          "title": "Shardid",
          "description": "From shard",
          "type": "integer"
        },
        "toShardID": {
          "title": "Toshardid",
          "description": "To shard",
          "type": "integer"
        },
        "amount": {
          "title": "Amount",
          "description": "Amount transferred in Atto",
          "type": "integer"
        }
      },
      "required": [
        "txHash",
        "from",
        "to",
        "shardID",
        "toShardID",
        "amount"
      ]
    },
    "MerkleProof": {
      "title": "MerkleProof",
      "type": "object",
      "properties": {
        "blockNumber": {
          "title": "Blocknumber",
          "description": "Block number",
          "type": "integer"
        },
        "blockHash": {
          "title": "Blockhash",
          "description": "Block hash",
          "type": "string"
        },
        "shardID": {
          "title": "Shardid",
          "description": "Shard ID of orginiating block",
          "type": "integer"
        },
        "receiptHash": {
          "title": "Receipthash",
          "description": "Transaction receipt hash",
          "type": "string"
        },
        "shardIDs": {
          "title": "Shardids",
          "description": "To shard",
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "shardHashed": {
          "title": "Shardhashed",
          "description": "Missing desc",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "blockNumber",
        "blockHash",
        "shardID",
        "receiptHash",
        "shardIDs",
        "shardHashed"
      ]
    },
    "BlockHeader": {
      "title": "BlockHeader",
      "type": "object",
      "properties": {
        "shard-id": {
          "title": "Shard-Id",
          "description": "Shard ID",
          "type": "integer"
        },
        "block-header-hash": {
          "title": "Block-Header-Hash",
          "description": "Block header hash",
          "type": "string"
        },
        "block-number": {
          "title": "Block-Number",
          "description": "Block number",
          "type": "integer"
        },
        "view-id": {
          "title": "View-Id",
          "description": "View ID",
          "type": "integer"
        },
        "epoch": {
          "title": "Epoch",
          "description": "Epoch number",
          "type": "integer"
        }
      },
      "required": [
        "shard-id",
        "block-header-hash",
        "block-number",
        "view-id",
        "epoch"
      ]
    },
    "PendingCXReceipt": {
      "title": "PendingCXReceipt",
      "type": "object",
      "properties": {
        "receipts": {
          "title": "Receipts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Receipt"
          }
        },
        "merkleProof": {
          "$ref": "#/definitions/MerkleProof"
        },
        "header": {
          "$ref": "#/definitions/BlockHeader"
        },
        "commitSig": {
          "title": "Commitsig",
          "description": "Hex representation of aggregated signature",
          "type": "string"
        },
        "commitBitMap": {
          "title": "Commitbitmap",
          "description": "Hex representation of aggregated signature bitmap",
          "type": "string"
        }
      },
      "required": [
        "receipts",
        "merkleProof",
        "header",
        "commitSig",
        "commitBitMap"
      ]
    },
    "GetPendingCXReceiptsResponse": {
      "title": "GetPendingCXReceiptsResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "List of PendingCXReceipt object",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PendingCXReceipt"
          }
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "GetPoolStatsRequest": {
      "title": "GetPoolStatsRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getPoolStats",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "description": "An empty list with no parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PoolStats": {
      "title": "PoolStats",
      "type": "object",
      "properties": {
        "executable-count": {
          "title": "Executable-Count",
          "description": "Staking transaction hash",
          "type": "string"
        },
        "non-executable-count": {
          "title": "Non-Executable-Count",
          "description": "Type of staking transaction",
          "type": "string"
        }
      },
      "required": [
        "executable-count",
        "non-executable-count"
      ]
    },
    "GetPoolStatsResponse": {
      "title": "GetPoolStatsResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "PoolStats Object",
          "allOf": [
            {
              "$ref": "#/definitions/PoolStats"
            }
          ]
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "GetShardingStructureRequest": {
      "title": "GetShardingStructureRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getShardingStructure",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "description": "An empty list with no parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ShardingStructure": {
      "title": "ShardingStructure",
      "type": "object",
      "properties": {
        "current": {
          "title": "Current",
          "description": "If this node is currently on this shard ID",
          "type": "boolean"
        },
        "http": {
          "title": "Http",
          "description": "HTTPS API endpoint for this shard ID",
          "type": "string"
        },
        "shardID": {
          "title": "Shardid",
          "description": "Shard ID",
          "type": "integer"
        },
        "ws": {
          "title": "Ws",
          "description": "Websocket API endpoint for this shard ID",
          "type": "string"
        }
      },
      "required": [
        "current",
        "http",
        "shardID",
        "ws"
      ]
    },
    "GetShardingStructureResponse": {
      "title": "GetShardingStructureResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "List of ShardingStructure Object",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShardingStructure"
          }
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "GetStakingNetworkInfoRequest": {
      "title": "GetStakingNetworkInfoRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getStakingNetworkInfoRequest",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "description": "An empty list with no parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StakingNetworkInfo": {
      "title": "StakingNetworkInfo",
      "type": "object",
      "properties": {
        "total-supply": {
          "title": "Total-Supply",
          "description": "Total number of pre-mined tokens",
          "type": "string"
        },
        "circulating-supply": {
          "title": "Circulating-Supply",
          "description": "Number of token available in the network",
          "type": "string"
        },
        "epoch-last-block": {
          "title": "Epoch-Last-Block",
          "description": "Last block of epoch",
          "type": "integer"
        },
        "total-staking": {
          "title": "Total-Staking",
          "description": "Total amount staked in Atto",
          "type": "integer"
        },
        "median-raw-stake": {
          "title": "Median-Raw-Stake",
          "description": "Effective median stake in Atto",
          "type": "string"
        }
      },
      "required": [
        "total-supply",
        "circulating-supply",
        "epoch-last-block",
        "total-staking",
        "median-raw-stake"
      ]
    },
    "GetStakingNetworkInfoResponse": {
      "title": "GetStakingNetworkInfoResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "StakingNetworkInfo Object",
          "allOf": [
            {
              "$ref": "#/definitions/StakingNetworkInfo"
            }
          ]
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "GetStakingTransactionByBlockHashAndIndexRequest": {
      "title": "GetStakingTransactionByBlockHashAndIndexRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getStakingTransactionByBlockHashAndIndex",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ]
        }
      },
      "required": [
        "params"
      ]
    },
    "GetStakingTransactionByBlockNumberAndIndexRequest": {
      "title": "GetStakingTransactionByBlockNumberAndIndexRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getStakingTransactionByBlockNumberAndIndex",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": [
            {
              "type": "integer"
            },
            {
              "type": "integer"
            }
          ]
        }
      },
      "required": [
        "params"
      ]
    },
    "GetStakingTransactionByHashRequest": {
      "title": "GetStakingTransactionByHashRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getStakingTransactionByHash",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "params"
      ]
    },
    "GetStakingTransactionsCountRequest": {
      "title": "GetStakingTransactionsCountRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getStakingTransactionsCount",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": [
            {
              "type": "string"
            },
            {
              "type": "string"
            }
          ]
        }
      },
      "required": [
        "params"
      ]
    },
    "TransactionType": {
      "title": "TransactionType",
      "description": "An enumeration.",
      "enum": [
        "SENT",
        "RECEIVED",
        "ALL"
      ],
      "type": "string"
    },
    "SortOrder": {
      "title": "SortOrder",
      "description": "An enumeration.",
      "enum": [
        "ASC",
        "DESC"
      ],
      "type": "string"
    },
    "TransactionsHistoryObject": {
      "title": "TransactionsHistoryObject",
      "type": "object",
      "properties": {
        "address": {
          "title": "Address",
          "description": "Wallet address",
          "type": "string"
        },
        "pageIndex": {
          "title": "Pageindex",
          "description": "Optional, which page ofo transactions to return, default 0",
          "default": 0,
          "type": "integer"
        },
        "pageSize": {
          "title": "Pagesize",
          "description": "Optional, how many transactions to display per page, default 1000",
          "default": 1000,
          "type": "integer"
        },
        "fullTx": {
          "title": "Fulltx",
          "description": "Optional, return full transaction data or just transaction hashes, default false",
          "default": false,
          "type": "boolean"
        },
        "txType": {
          "description": "Optional, which type of transactions to display ('ALL','RECEIVED', or 'SENT'), default 'ALL'",
          "default": "ALL",
          "allOf": [
            {
              "$ref": "#/definitions/TransactionType"
            }
          ]
        },
        "order": {
          "description": "Optional, sort transactions in ascending or descending order based on timestamp ('ASC' or 'DESC'), default 'ASC'",
          "default": "ASC",
          "allOf": [
            {
              "$ref": "#/definitions/SortOrder"
            }
          ]
        }
      },
      "required": [
        "address"
      ]
    },
    "GetStakingTransactionsHistoryRequest": {
      "title": "GetStakingTransactionsHistoryRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getStakingTransactionsHistory",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionsHistoryObject"
          }
        }
      },
      "required": [
        "params"
      ]
    },
    "GetStorageAtParameters": {
      "title": "GetStorageAtParameters",
      "type": "object",
      "properties": {
        "address": {
          "title": "Address",
          "description": "Smart contract address",
          "type": "string"
        },
        "storage-location": {
          "title": "Storage-Location",
          "description": "Hex representation of storage location",
          "type": "string"
        },
        "block-number": {
          "title": "Block-Number",
          "description": "Block number",
          "type": "integer"
        }
      },
      "required": [
        "address",
        "storage-location",
        "block-number"
      ]
    },
    "GetStorageAtRequest": {
      "title": "GetStorageAtRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getStorageAt",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": [
            {
              "type": "string"
            },
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ]
        }
      },
      "required": [
        "params"
      ]
    },
    "GetStorageAtResponse": {
      "title": "GetStorageAtResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "Data stored at the smart contract location",
          "type": "string"
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "GetSuperCommitteesRequest": {
      "title": "GetSuperCommitteesRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getSuperCommittess",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "description": "An empty list with no parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CommitteeMember": {
      "title": "CommitteeMember",
      "type": "object",
      "properties": {
        "is-harmony-slot": {
          "title": "Is-Harmony-Slot",
          "description": "If slot is Harmony owned",
          "type": "boolean"
        },
        "earning-account": {
          "title": "Earning-Account",
          "description": "Wallet address that rewards are being paid to",
          "type": "string"
        },
        "bls-public-key": {
          "title": "Bls-Public-Key",
          "description": "BLS public key",
          "type": "string"
        },
        "voting-power-unnormalized": {
          "title": "Voting-Power-Unnormalized",
          "description": "Voting power of key",
          "type": "string"
        },
        "voting-power-\\%": {
          "title": "Voting-Power-\\%",
          "description": "Normalized voting power of key",
          "type": "string"
        }
      },
      "required": [
        "is-harmony-slot",
        "earning-account",
        "bls-public-key",
        "voting-power-unnormalized",
        "voting-power-\\%"
      ]
    },
    "CommitteeShard": {
      "title": "CommitteeShard",
      "type": "object",
      "properties": {
        "policy": {
          "title": "Policy",
          "description": "Current election policy",
          "type": "string"
        },
        "count": {
          "title": "Count",
          "description": "Number of BLS keys on shard",
          "type": "integer"
        },
        "external-validator-slot-count": {
          "title": "External-Validator-Slot-Count",
          "description": "Number of external BLS keys in committee",
          "type": "integer"
        },
        "committee-members": {
          "title": "Committee-Members",
          "description": "List of Committee Member Objects",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommitteeMember"
          }
        }
      },
      "required": [
        "policy",
        "count",
        "external-validator-slot-count",
        "committee-members"
      ]
    },
    "ElectedCommittee": {
      "title": "ElectedCommittee",
      "type": "object",
      "properties": {
        "quorum-deciders": {
          "title": "Quorum-Deciders",
          "description": "Shard of committee",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CommitteeShard"
          }
        }
      },
      "required": [
        "quorum-deciders"
      ]
    },
    "SuperCommittees": {
      "title": "SuperCommittees",
      "type": "object",
      "properties": {
        "previous": {
          "title": "Previous",
          "description": "Previously elected committee",
          "allOf": [
            {
              "$ref": "#/definitions/ElectedCommittee"
            }
          ]
        },
        "current": {
          "title": "Current",
          "description": "Currently elected committee, same schema as previous",
          "allOf": [
            {
              "$ref": "#/definitions/ElectedCommittee"
            }
          ]
        }
      },
      "required": [
        "previous",
        "current"
      ]
    },
    "GetSuperCommitteesResponse": {
      "title": "GetSuperCommitteesResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "SuperCommittees Object",
          "allOf": [
            {
              "$ref": "#/definitions/SuperCommittees"
            }
          ]
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "GetTotalSupplyRequest": {
      "title": "GetTotalSupplyRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getTotalSupply",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "description": "An empty list with no parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetTotalSupplyResponse": {
      "title": "GetTotalSupplyResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "Total number of pre-mined tokens",
          "type": "integer"
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "GetTransactionByBlockHashAndIndexRequest": {
      "title": "GetTransactionByBlockHashAndIndexRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getTransactionByBlockHashAndIndex",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ]
        }
      },
      "required": [
        "params"
      ]
    },
    "GetTransactionByBlockNumberAndIndexRequest": {
      "title": "GetTransactionByBlockNumberAndIndexRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getTransactionByBlockNumberAndIndex",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": [
            {
              "type": "integer"
            },
            {
              "type": "integer"
            }
          ]
        }
      },
      "required": [
        "params"
      ]
    },
    "GetTransactionByHashRequest": {
      "title": "GetTransactionByHashRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getTransactionByHash",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "params"
      ]
    },
    "GetTransactionReceiptParameters": {
      "title": "GetTransactionReceiptParameters",
      "type": "object",
      "properties": {
        "receipt": {
          "title": "Receipt",
          "description": "Transaction receipt",
          "type": "string"
        }
      },
      "required": [
        "receipt"
      ]
    },
    "GetTransactionReceiptRequest": {
      "title": "GetTransactionReceiptRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getTransactionReceipt",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "params"
      ]
    },
    "TransactionReceipt": {
      "title": "TransactionReceipt",
      "type": "object",
      "properties": {
        "blockHash": {
          "title": "Blockhash",
          "description": "Block hash",
          "type": "string"
        },
        "blockNumber": {
          "title": "Blocknumber",
          "description": "Block number",
          "type": "integer"
        },
        "contractAddress": {
          "title": "Contractaddress",
          "description": "Smart contract address",
          "type": "string"
        },
        "culmulativeGasUsed": {
          "title": "Culmulativegasused",
          "description": "Gas used for transaction",
          "type": "integer"
        },
        "from": {
          "title": "From",
          "description": "Sender wallet address",
          "type": "string"
        },
        "gasUsed": {
          "title": "Gasused",
          "description": "Gas used for the transaction",
          "type": "integer"
        },
        "logs": {
          "title": "Logs",
          "description": "Array",
          "type": "array",
          "items": {}
        },
        "logsBloom": {
          "title": "Logsbloom",
          "description": "Bloom logs",
          "type": "string"
        },
        "shardID": {
          "title": "Shardid",
          "description": "Shard ID",
          "type": "integer"
        },
        "status": {
          "title": "Status",
          "description": "Status of transaction (0: pending, 1: success)",
          "type": "integer"
        },
        "to": {
          "title": "To",
          "description": "Receiver wallet address",
          "type": "string"
        },
        "transactionHash": {
          "title": "Transactionhash",
          "description": "Transaction hash",
          "type": "string"
        },
        "transactionIndex": {
          "title": "Transactionindex",
          "description": "Transaction index within block",
          "type": "string"
        }
      },
      "required": [
        "blockHash",
        "blockNumber",
        "contractAddress",
        "culmulativeGasUsed",
        "from",
        "gasUsed",
        "logs",
        "logsBloom",
        "shardID",
        "status",
        "to",
        "transactionHash",
        "transactionIndex"
      ]
    },
    "GetTransactionReceiptResponse": {
      "title": "GetTransactionReceiptResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "Object",
          "allOf": [
            {
              "$ref": "#/definitions/TransactionReceipt"
            }
          ]
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "GetTransactionsCountRequest": {
      "title": "GetTransactionsCountRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getTransactionsCount",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": [
            {
              "type": "string"
            },
            {
              "type": "string"
            }
          ]
        }
      },
      "required": [
        "params"
      ]
    },
    "GetTransactionsHistoryRequest": {
      "title": "GetTransactionsHistoryRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getTransactionsHistory",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionsHistoryObject"
          }
        }
      },
      "required": [
        "params"
      ]
    },
    "GetValidatorInformationRequest": {
      "title": "GetValidatorInformationRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "description": "The method to call out to.",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "method",
        "params"
      ]
    },
    "GetValidatorKeysRequest": {
      "title": "GetValidatorKeysRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getValidatorKeys",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      },
      "required": [
        "params"
      ]
    },
    "GetValidatorsRequest": {
      "title": "GetValidatorsRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getValidators",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      },
      "required": [
        "params"
      ]
    },
    "ValidatorAddress": {
      "title": "ValidatorAddress",
      "type": "object",
      "properties": {
        "address": {
          "title": "Address",
          "description": "Wallet address",
          "type": "string"
        },
        "balance": {
          "title": "Balance",
          "description": "Balance of wallet",
          "type": "integer"
        }
      },
      "required": [
        "address",
        "balance"
      ]
    },
    "ValidatorIDs": {
      "title": "ValidatorIDs",
      "type": "object",
      "properties": {
        "shardID": {
          "title": "Shardid",
          "description": "Shard ID",
          "type": "integer"
        },
        "validators": {
          "title": "Validators",
          "description": "Array of Validator Address objects",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidatorAddress"
          }
        }
      },
      "required": [
        "shardID",
        "validators"
      ]
    },
    "GetValidatorsResponse": {
      "title": "GetValidatorsResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "ValidatorIDs Object",
          "allOf": [
            {
              "$ref": "#/definitions/ValidatorIDs"
            }
          ]
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "HashAndIndexParameters": {
      "title": "HashAndIndexParameters",
      "type": "object",
      "properties": {
        "hash": {
          "title": "Hash",
          "description": "hash value",
          "type": "string"
        },
        "index": {
          "title": "Index",
          "description": "index value",
          "type": "integer"
        }
      },
      "required": [
        "hash",
        "index"
      ]
    },
    "HashParameters": {
      "title": "HashParameters",
      "type": "object",
      "properties": {
        "hash": {
          "title": "Hash",
          "description": "hash value",
          "type": "string"
        }
      },
      "required": [
        "hash"
      ]
    },
    "Header": {
      "title": "Header",
      "type": "object",
      "properties": {
        "blockHash": {
          "title": "Blockhash",
          "description": "Block hash",
          "type": "string"
        },
        "blockNumber": {
          "title": "Blocknumber",
          "description": "Block number",
          "type": "integer"
        },
        "shardID": {
          "title": "Shardid",
          "description": "Shard ID",
          "type": "integer"
        },
        "leader": {
          "title": "Leader",
          "description": "Wallet address of leader that proposed this block if prestaking, otherwise sha256 hash of leader's public bls key",
          "type": "string"
        },
        "viewID": {
          "title": "Viewid",
          "description": "View ID of the block",
          "type": "integer"
        },
        "epoch": {
          "title": "Epoch",
          "description": "Epoch of the block",
          "type": "integer"
        },
        "timestamp": {
          "title": "Timestamp",
          "description": "Timestamp that the block was finalized",
          "type": "integer"
        },
        "unixtime": {
          "title": "Unixtime",
          "description": "Timestamp that the block was finalized in Unix time",
          "type": "integer"
        },
        "lastCommitSig": {
          "title": "Lastcommitsig",
          "description": "Hex representation of aggregated signatures of the previous block",
          "type": "string"
        },
        "lastCommitBitmap": {
          "title": "Lastcommitbitmap",
          "description": "Hex representation of the aggregated signature bitmap of the previous block",
          "type": "string"
        }
      },
      "required": [
        "blockHash",
        "blockNumber",
        "shardID",
        "leader",
        "viewID",
        "epoch",
        "timestamp",
        "unixtime",
        "lastCommitSig",
        "lastCommitBitmap"
      ]
    },
    "HeaderResponse": {
      "title": "HeaderResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "$ref": "#/definitions/Header"
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "LatestHeaderRequest": {
      "title": "LatestHeaderRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_latestHeader",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "description": "An empty list with no parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PeerCountRequest": {
      "title": "PeerCountRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "net_peerCount",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "description": "An empty list with no parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PeerCountResponse": {
      "title": "PeerCountResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "Number of peers respresented as a Hex string",
          "type": "string"
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "PendingStakingTransactionsRequest": {
      "title": "PendingStakingTransactionsRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_getPendingStakingTransactions",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "description": "An empty list with no parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PendingTransactionsRequest": {
      "title": "PendingTransactionsRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_pendingTransactions",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "description": "An empty list with no parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ProtocolVersionRequest": {
      "title": "ProtocolVersionRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_protocolVersion",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "description": "An empty list with no parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ProtocolVersionResponse": {
      "title": "ProtocolVersionResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "Protocol version",
          "type": "integer"
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "RawTransactionParameters": {
      "title": "RawTransactionParameters",
      "type": "object",
      "properties": {
        "transaction_hex": {
          "title": "Transaction Hex",
          "description": "Hex representation of signed transaction",
          "type": "string"
        }
      },
      "required": [
        "transaction_hex"
      ]
    },
    "ResendCXRequest": {
      "title": "ResendCXRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_resendCx",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "params"
      ]
    },
    "ResendCXResponse": {
      "title": "ResendCXResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "If cross shard receipt was successfully resent or not",
          "type": "boolean"
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "SendRawStakingTransactionRequest": {
      "title": "SendRawStakingTransactionRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_sendRawStakingTransaction",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "params"
      ]
    },
    "SendRawStakingTransactionResponse": {
      "title": "SendRawStakingTransactionResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "Staking transaction hash if it was successfully added, else an erro",
          "type": "string"
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "SendRawTransactionRequest": {
      "title": "SendRawTransactionRequest",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "default": "2.0",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The request id, useful for asynchronous requests.",
          "default": 1,
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "default": "hmyv2_sendRawTransaction",
          "type": "string"
        },
        "params": {
          "title": "Params",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "params"
      ]
    },
    "SendRawTransactionResponse": {
      "title": "SendRawTransactionResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "Transaction hash",
          "type": "string"
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "StakingTransaction": {
      "title": "StakingTransaction",
      "type": "object",
      "properties": {
        "blockHash": {
          "title": "Blockhash",
          "description": "Block hash in which transaction was finalized",
          "type": "string"
        },
        "blockNumber": {
          "title": "Blocknumber",
          "description": "Block number in which transaction was finalized",
          "type": "integer"
        },
        "from": {
          "title": "From",
          "description": "Sender wallet address",
          "type": "string"
        },
        "timestamp": {
          "title": "Timestamp",
          "description": "Unix time at which transaction was finalized",
          "type": "integer"
        },
        "gas": {
          "title": "Gas",
          "description": "Gas limit of transaction",
          "type": "integer"
        },
        "gasPrice": {
          "title": "Gasprice",
          "description": "Gas price of transaction in Atto",
          "type": "integer"
        },
        "nonce": {
          "title": "Nonce",
          "description": "Wallet nonce of transaction",
          "type": "integer"
        },
        "transactionIndex": {
          "title": "Transactionindex",
          "description": "Staking transaction index within block",
          "type": "integer"
        },
        "type": {
          "title": "Type",
          "description": "Type of staking transaction",
          "type": "string"
        },
        "msg": {
          "title": "Msg",
          "description": "Staking transaction data, depending on the type of staking transaction",
          "type": "object"
        }
      },
      "required": [
        "blockHash",
        "blockNumber",
        "from",
        "timestamp",
        "gas",
        "gasPrice",
        "nonce",
        "transactionIndex",
        "type",
        "msg"
      ]
    },
    "StakingTransactionListResponse": {
      "title": "StakingTransactionListResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "List of staking transactions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StakingTransaction"
          }
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "StakingTransactionResponse": {
      "title": "StakingTransactionResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "StakingTransaction Object",
          "allOf": [
            {
              "$ref": "#/definitions/StakingTransaction"
            }
          ]
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "TransactionCountResponse": {
      "title": "TransactionCountResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "Number of transactions",
          "type": "integer"
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "Transaction": {
      "title": "Transaction",
      "type": "object",
      "properties": {
        "blockHash": {
          "title": "Blockhash",
          "description": "Block hash",
          "type": "string"
        },
        "blockNumber": {
          "title": "Blocknumber",
          "description": "Block number",
          "type": "integer"
        },
        "from": {
          "title": "From",
          "description": "Sender wallet address",
          "type": "string"
        },
        "timestamp": {
          "title": "Timestamp",
          "description": "Unix time at which transaction was finalized",
          "type": "integer"
        },
        "gas": {
          "title": "Gas",
          "description": "Gas limit of transaction",
          "type": "integer"
        },
        "gasPrice": {
          "title": "Gasprice",
          "description": "Gas price of transaction in Atto",
          "type": "integer"
        },
        "hash": {
          "title": "Hash",
          "description": "Transaction hash",
          "type": "string"
        },
        "input": {
          "title": "Input",
          "description": "Transaction data, used for smart contracts",
          "type": "string"
        },
        "nonce": {
          "title": "Nonce",
          "description": "Sender wallet nonce of transaction",
          "type": "integer"
        },
        "to": {
          "title": "To",
          "description": "Receiver wallet address",
          "type": "string"
        },
        "transactionIndex": {
          "title": "Transactionindex",
          "description": "transaction index within block",
          "type": "integer"
        },
        "value": {
          "title": "Value",
          "description": "Amount transferred",
          "type": "integer"
        },
        "shardID": {
          "title": "Shardid",
          "description": "From shard",
          "type": "integer"
        },
        "toShardID": {
          "title": "Toshardid",
          "description": "To shard",
          "type": "integer"
        }
      },
      "required": [
        "blockHash",
        "blockNumber",
        "from",
        "timestamp",
        "gas",
        "gasPrice",
        "hash",
        "input",
        "nonce",
        "to",
        "transactionIndex",
        "value",
        "shardID",
        "toShardID"
      ]
    },
    "TransactionListResponse": {
      "title": "TransactionListResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "List of transactions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transaction"
          }
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "TransactionResponse": {
      "title": "TransactionResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "Transaction Object",
          "allOf": [
            {
              "$ref": "#/definitions/Transaction"
            }
          ]
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "TransactionsCountParameters": {
      "title": "TransactionsCountParameters",
      "type": "object",
      "properties": {
        "address": {
          "title": "Address",
          "description": "Wallet address",
          "type": "string"
        },
        "transaction_type": {
          "description": "Type of staking transaction (SENT, RECEIVED, ALL)",
          "allOf": [
            {
              "$ref": "#/definitions/TransactionType"
            }
          ]
        }
      },
      "required": [
        "address",
        "transaction_type"
      ]
    },
    "TransactionsHashListResponse": {
      "title": "TransactionsHashListResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "List of transaction hashes",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "TransactionsHistoryParameters": {
      "title": "TransactionsHistoryParameters",
      "type": "object",
      "properties": {
        "obj": {
          "$ref": "#/definitions/TransactionsHistoryObject"
        }
      },
      "required": [
        "obj"
      ]
    },
    "Key": {
      "title": "Key",
      "type": "object",
      "properties": {
        "bls-public-key": {
          "title": "Bls-Public-Key",
          "description": "BLS public key",
          "type": "string"
        },
        "group-percent": {
          "title": "Group-Percent",
          "description": "Key voting power in shard",
          "type": "string"
        },
        "effective-stake": {
          "title": "Effective-Stake",
          "description": "Effective stake of key",
          "type": "string"
        },
        "raw-stake": {
          "title": "Raw-Stake",
          "description": "Actual stake of key",
          "type": "string"
        },
        "earning-account": {
          "title": "Earning-Account",
          "description": "Validator wallet address",
          "type": "string"
        },
        "overall-percent": {
          "title": "Overall-Percent",
          "description": "Percent of effective stake",
          "type": "string"
        },
        "shard-id": {
          "title": "Shard-Id",
          "description": "Shard ID that key is on",
          "type": "integer"
        }
      },
      "required": [
        "bls-public-key",
        "group-percent",
        "effective-stake",
        "raw-stake",
        "earning-account",
        "overall-percent",
        "shard-id"
      ]
    },
    "BlsKey": {
      "title": "BlsKey",
      "type": "object",
      "properties": {
        "key": {
          "title": "Key",
          "description": "Object",
          "allOf": [
            {
              "$ref": "#/definitions/Key"
            }
          ]
        },
        "earned-reward": {
          "title": "Earned-Reward",
          "description": "Lifetime reward key has earned",
          "type": "integer"
        }
      },
      "required": [
        "key",
        "earned-reward"
      ]
    },
    "Metrics": {
      "title": "Metrics",
      "type": "object",
      "properties": {
        "by-bls-key": {
          "title": "By-Bls-Key",
          "description": "BLS key earning metrics for current epoch",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BlsKey"
          }
        }
      },
      "required": [
        "by-bls-key"
      ]
    },
    "Blocks": {
      "title": "Blocks",
      "type": "object",
      "properties": {
        "to-sign": {
          "title": "To-Sign",
          "description": "Number of blocks available to the validator to sign",
          "type": "integer"
        },
        "signed": {
          "title": "Signed",
          "description": "Number of blocks the validator has signed",
          "type": "integer"
        }
      },
      "required": [
        "to-sign",
        "signed"
      ]
    },
    "EpochAPR": {
      "title": "EpochAPR",
      "type": "object",
      "properties": {
        "epoch": {
          "title": "Epoch",
          "description": "Epoch number",
          "type": "integer"
        },
        "value": {
          "title": "Value",
          "description": "Calculated APR for that epoch",
          "type": "string"
        }
      },
      "required": [
        "epoch",
        "value"
      ]
    },
    "Lifetime": {
      "title": "Lifetime",
      "type": "object",
      "properties": {
        "reward-accumulated": {
          "title": "Reward-Accumulated",
          "description": "Lifetime reward accumulated by the validator",
          "type": "integer"
        },
        "blocks": {
          "title": "Blocks",
          "description": "Blocks Object",
          "allOf": [
            {
              "$ref": "#/definitions/Blocks"
            }
          ]
        },
        "apr": {
          "title": "Apr",
          "description": "Approximate Return Rate",
          "type": "string"
        },
        "epoch-apr": {
          "title": "Epoch-Apr",
          "description": "List of APR per epoch",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EpochAPR"
          }
        }
      },
      "required": [
        "reward-accumulated",
        "blocks",
        "apr",
        "epoch-apr"
      ]
    },
    "ValidatorInformation": {
      "title": "ValidatorInformation",
      "type": "object",
      "properties": {
        "bls-public-keys": {
          "title": "Bls-Public-Keys",
          "description": "List of public BLS keys associated with the validator wallet address",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "last-epoch-in-committee": {
          "title": "Last-Epoch-In-Committee",
          "description": "Last epoch any key of the validator was elected",
          "type": "integer"
        },
        "min-self-delegation": {
          "title": "Min-Self-Delegation",
          "description": "Ammount that validator must delegate to self in Atto",
          "type": "integer"
        },
        "max-total-delegation": {
          "title": "Max-Total-Delegation",
          "description": "Total amount that validator will accept delegation until in Atto",
          "type": "integer"
        },
        "rate": {
          "title": "Rate",
          "description": "Current commission rate",
          "type": "string"
        },
        "max-rate": {
          "title": "Max-Rate",
          "description": "Max commission rate a validator can charge",
          "type": "string"
        },
        "max-change-rate": {
          "title": "Max-Change-Rate",
          "description": "Maximum amount the commission rate can increase in one epoch",
          "type": "string"
        },
        "update-height": {
          "title": "Update-Height",
          "description": "Last block validator editted their validator information",
          "type": "integer"
        },
        "name": {
          "title": "Name",
          "description": "Validator name, displayed on the Staking Dashboard",
          "type": "string"
        },
        "identity": {
          "title": "Identity",
          "description": "Validator identity, must be unique",
          "type": "string"
        },
        "website": {
          "title": "Website",
          "description": "Validator website, displayed on the Staking Dashboard",
          "type": "string"
        },
        "security-contract": {
          "title": "Security-Contract",
          "description": "Method to contact the validator",
          "type": "string"
        },
        "details": {
          "title": "Details",
          "description": "Validator details, displayed on the Staking Dashboard",
          "type": "string"
        },
        "creation-height": {
          "title": "Creation-Height",
          "description": "Block in which the validator was created",
          "type": "integer"
        },
        "address": {
          "title": "Address",
          "description": "Validator wallet address",
          "type": "string"
        },
        "delegations": {
          "title": "Delegations",
          "description": "List of Delegation Objects",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Delegation"
          }
        },
        "metrics": {
          "title": "Metrics",
          "description": "BLS key earning metrics for current epoch",
          "allOf": [
            {
              "$ref": "#/definitions/Metrics"
            }
          ]
        },
        "total-delegation": {
          "title": "Total-Delegation",
          "description": "Total amount delegated to validator",
          "type": "integer"
        },
        "currently-in-committee": {
          "title": "Currently-In-Committee",
          "description": "If key is currently elected",
          "type": "boolean"
        },
        "epos-status": {
          "title": "Epos-Status",
          "description": "Currently elected, eligible to be elected next epoch, or not eligible to be elected next epoch",
          "type": "string"
        },
        "epos-winning-stake": {
          "title": "Epos-Winning-Stake",
          "description": "Total effective stake of the validator",
          "type": "string"
        },
        "booted-status": {
          "title": "Booted-Status",
          "description": "Banned status",
          "type": "string"
        },
        "active-status": {
          "title": "Active-Status",
          "description": "Active or inactive",
          "type": "string"
        },
        "lifetime": {
          "title": "Lifetime",
          "description": "Lifetime Object",
          "allOf": [
            {
              "$ref": "#/definitions/Lifetime"
            }
          ]
        }
      },
      "required": [
        "bls-public-keys",
        "last-epoch-in-committee",
        "min-self-delegation",
        "max-total-delegation",
        "rate",
        "max-rate",
        "max-change-rate",
        "update-height",
        "name",
        "identity",
        "website",
        "security-contract",
        "details",
        "creation-height",
        "address",
        "delegations",
        "metrics",
        "total-delegation",
        "currently-in-committee",
        "epos-status",
        "epos-winning-stake",
        "booted-status",
        "active-status",
        "lifetime"
      ]
    },
    "ValidatorInformationListResponse": {
      "title": "ValidatorInformationListResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "List of ValidatorInformation Objects",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidatorInformation"
          }
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    },
    "ValidatorInformationResponse": {
      "title": "ValidatorInformationResponse",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "title": "Jsonrpc",
          "description": "The JSON-RPC version.",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "The id of the request the response is in response to.",
          "type": "integer"
        },
        "result": {
          "title": "Result",
          "description": "Validator Object",
          "allOf": [
            {
              "$ref": "#/definitions/ValidatorInformation"
            }
          ]
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "result"
      ]
    }
  }
}